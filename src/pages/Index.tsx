import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { toast } from "@/hooks/use-toast";
import BimSpeedLogo from "@/components/BimSpeedLogo";
import { 
  Check, 
  Shield, 
  Users, 
  Download, 
  Zap, 
  Settings, 
  Clock,
  Lock,
  Facebook,
  Youtube,
  MessageCircle,
  Phone,
  Globe,
  ChevronDown
} from "lucide-react";

const Index = () => {
  const [isHeaderSticky, setIsHeaderSticky] = useState(false);
  const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });
  const [isSubmitted, setIsSubmitted] = useState(false);
  const [formData, setFormData] = useState({
    fullName: "",
    email: "",
    phone: "",
    company: "",
  });

  // Sticky header effect
  useEffect(() => {
    const handleScroll = () => {
      setIsHeaderSticky(window.scrollY > 50);
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  // Countdown timer
  useEffect(() => {
    const calculateTimeLeft = () => {
      const now = new Date();
      const tomorrow = new Date(now);
      tomorrow.setDate(tomorrow.getDate() + 1);
      tomorrow.setHours(23, 59, 59, 999);
      const difference = tomorrow.getTime() - now.getTime();

      setTimeLeft({
        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),
        minutes: Math.floor((difference / 1000 / 60) % 60),
        seconds: Math.floor((difference / 1000) % 60),
      });
    };

    calculateTimeLeft();
    const timer = setInterval(calculateTimeLeft, 1000);
    return () => clearInterval(timer);
  }, []);

  const scrollToForm = () => {
    document.getElementById("hero-form")?.scrollIntoView({ behavior: "smooth" });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    // Vietnamese phone validation
    const phoneRegex = /^(0|\+84)[3|5|7|8|9][0-9]{8}$/;
    if (!phoneRegex.test(formData.phone)) {
      toast({
        title: "‚ùå S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá",
        description: "Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i h·ª£p l·ªá (VD: 0936340576)",
        variant: "destructive",
      });
      return;
    }

    // Email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(formData.email)) {
      toast({
        title: "‚ùå Email kh√¥ng h·ª£p l·ªá",
        description: "Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ email h·ª£p l·ªá",
        variant: "destructive",
      });
      return;
    }

    try {
      // Call n8n webhook
      const webhookUrl = "https://n8n.bimspeed.net/webhook/ad6d9441-4e7e-47be-a155-526aa1848369";
      
      const response = await fetch(webhookUrl, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          fullName: formData.fullName,
          phone: formData.phone,
          email: formData.email,
          address: formData.company,
          leadSource: "Website",
          fromWebsite: window.location.href,
        }),
      });

      if (response.ok) {
        // Success - Show thank you page
        setIsSubmitted(true);
        
        // Reset form
        setFormData({ fullName: "", email: "", phone: "", company: "" });
      } else {
        throw new Error("Webhook call failed");
      }
    } catch (error) {
      console.error("Error submitting form:", error);
      // Still show thank you page
      setIsSubmitted(true);
      
      // Reset form anyway
      setFormData({ fullName: "", email: "", phone: "", company: "" });
    }
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  // Thank You Page
  if (isSubmitted) {
    return (
      <div className="min-h-screen bg-gradient-hero flex items-center justify-center px-3 sm:px-4">
        <Card className="max-w-2xl w-full shadow-2xl border-2 border-accent">
          <CardContent className="pt-8 sm:pt-12 pb-6 sm:pb-8 text-center">
            <div className="mb-6">
              <div className="w-16 h-16 sm:w-20 sm:h-20 bg-accent rounded-full flex items-center justify-center mx-auto mb-4 animate-scale-in">
                <Check className="w-8 h-8 sm:w-12 sm:h-12 text-accent-foreground" />
              </div>
              <h1 className="text-xl sm:text-2xl md:text-3xl lg:text-4xl font-bold font-heading mb-3 sm:mb-4 text-foreground">
                üéâ ƒêƒÉng k√Ω th√†nh c√¥ng!
              </h1>
              <p className="text-sm sm:text-base md:text-lg text-muted-foreground mb-6 sm:mb-8">
                C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng BimSpeed MEP Tool
              </p>
            </div>

            <div className="space-y-4 sm:space-y-6 mb-6 sm:mb-8">
              <div className="p-4 sm:p-6 bg-secondary rounded-xl border border-border text-left">
                <div className="flex items-start gap-2 sm:gap-3 mb-4">
                  <MessageCircle className="w-5 h-5 sm:w-6 sm:h-6 text-accent flex-shrink-0 mt-1" />
                  <div>
                    <h3 className="font-bold text-base sm:text-lg mb-2">B∆∞·ªõc 1: Tham gia nh√≥m Zalo k·ªπ s∆∞</h3>
                    <p className="text-xs sm:text-sm text-muted-foreground mb-3">
                      V√†o nh√≥m Zalo ƒë·ªÉ nh·∫≠n h·ªó tr·ª£ k·ªπ thu·∫≠t, h∆∞·ªõng d·∫´n c√†i ƒë·∫∑t v√† c·∫≠p nh·∫≠t phi√™n b·∫£n m·ªõi nh·∫•t
                    </p>
                    <Button 
                      variant="cta" 
                      size="lg" 
                      className="w-full text-xs sm:text-sm"
                      onClick={() => window.open("https://zalo.me/g/zaldon417", "_blank")}
                    >
                      <MessageCircle className="w-4 h-4 sm:w-5 sm:h-5" />
                      Tham gia nh√≥m Zalo ngay
                    </Button>
                  </div>
                </div>
              </div>

              <div className="p-4 sm:p-6 bg-secondary rounded-xl border border-border text-left">
                <div className="flex items-start gap-2 sm:gap-3">
                  <Download className="w-5 h-5 sm:w-6 sm:h-6 text-primary flex-shrink-0 mt-1" />
                  <div>
                    <h3 className="font-bold text-base sm:text-lg mb-2">B∆∞·ªõc 2: Ki·ªÉm tra Email c·ªßa b·∫°n</h3>
                    <p className="text-xs sm:text-sm text-muted-foreground">
                      Ch√∫ng t√¥i ƒë√£ g·ª≠i email ch·ª©a <span className="font-bold text-foreground">License Key</span> v√† h∆∞·ªõng d·∫´n c√†i ƒë·∫∑t chi ti·∫øt ƒë·∫øn ƒë·ªãa ch·ªâ email b·∫°n ƒë√£ ƒëƒÉng k√Ω.
                    </p>
                    <p className="text-xs text-muted-foreground mt-2">
                      üí° N·∫øu kh√¥ng th·∫•y email, vui l√≤ng ki·ªÉm tra th∆∞ m·ª•c Spam/Junk
                    </p>
                  </div>
                </div>
              </div>

              <div className="p-4 sm:p-6 bg-primary/5 rounded-xl border border-primary/20 text-left">
                <div className="flex items-start gap-2 sm:gap-3">
                  <Shield className="w-5 h-5 sm:w-6 sm:h-6 text-primary flex-shrink-0 mt-1" />
                  <div>
                    <h3 className="font-bold text-base sm:text-lg mb-2 text-primary">B·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c:</h3>
                    <ul className="space-y-2 text-xs sm:text-sm text-muted-foreground">
                      <li className="flex items-start gap-2">
                        <Check className="w-4 h-4 sm:w-5 sm:h-5 text-accent flex-shrink-0 mt-0.5" />
                        <span>Link t·∫£i BimSpeed MEP Tool (Revit 2020-2025)</span>
                      </li>
                      <li className="flex items-start gap-2">
                        <Check className="w-4 h-4 sm:w-5 sm:h-5 text-accent flex-shrink-0 mt-0.5" />
                        <span>License Key k√≠ch ho·∫°t mi·ªÖn ph√≠</span>
                      </li>
                      <li className="flex items-start gap-2">
                        <Check className="w-4 h-4 sm:w-5 sm:h-5 text-accent flex-shrink-0 mt-0.5" />
                        <span>Video h∆∞·ªõng d·∫´n c√†i ƒë·∫∑t & s·ª≠ d·ª•ng</span>
                      </li>
                      <li className="flex items-start gap-2">
                        <Check className="w-4 h-4 sm:w-5 sm:h-5 text-accent flex-shrink-0 mt-0.5" />
                        <span>H·ªó tr·ª£ k·ªπ thu·∫≠t t·ª´ team BimSpeed</span>
                      </li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>

            <div className="flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center">
              <Button 
                variant="cta" 
                size="lg"
                className="text-xs sm:text-sm"
                onClick={() => window.open("https://zalo.me/g/zaldon417", "_blank")}
              >
                <MessageCircle className="w-4 h-4 sm:w-5 sm:h-5" />
                V√†o nh√≥m Zalo h·ªó tr·ª£
              </Button>
              <Button 
                variant="outline" 
                size="lg"
                className="text-xs sm:text-sm"
                onClick={() => setIsSubmitted(false)}
              >
                Quay l·∫°i trang ch·ªß
              </Button>
            </div>

            <div className="mt-6 sm:mt-8 pt-4 sm:pt-6 border-t border-border">
              <p className="text-xs sm:text-sm text-muted-foreground">
                <Phone className="w-3 h-3 sm:w-4 sm:h-4 inline mr-1" />
                C·∫ßn h·ªó tr·ª£? Li√™n h·ªá: <span className="font-bold text-foreground">Ms Hi√™n ‚Äì 0936 340 576</span>
              </p>
            </div>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-hero">
      {/* Header */}
      <header 
        className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
          isHeaderSticky 
            ? "bg-card/95 backdrop-blur-md shadow-md" 
            : "bg-transparent"
        }`}
      >
        <div className="container mx-auto px-3 sm:px-4 py-3 sm:py-4 flex items-center justify-between">
          <BimSpeedLogo size="md" />
          <Button variant="hero" size="sm" className="text-xs sm:text-sm md:text-base" onClick={scrollToForm}>
            Nh·∫≠n ph·∫ßn m·ªÅm
          </Button>
        </div>
      </header>

      {/* Hero Section */}
      <section id="hero" className="pt-20 sm:pt-24 md:pt-32 pb-12 sm:pb-16 md:pb-20 px-3 sm:px-4">
        <div className="container mx-auto">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 sm:gap-8 md:gap-12 items-center">
            {/* Left - Text */}
            <div className="space-y-4 sm:space-y-6 animate-fade-in">
              <h1 className="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold font-heading leading-tight text-foreground">
                TƒÉng t·ªëc thi·∫øt k·∫ø MEP trong Revit ‚Äì v·ªõi BimSpeed MEP Tool mi·ªÖn ph√≠!
              </h1>
              <h4 className="text-sm sm:text-base md:text-lg text-muted-foreground">
                Nh·∫≠n ngay c√¥ng c·ª• gi√∫p k·ªπ s∆∞ c∆° ƒëi·ªán (MEP) t·ª± ƒë·ªông t·∫°o, xoay, cƒÉn ch·ªânh v√† qu·∫£n l√Ω h·ªá th·ªëng ·ªëng, co, fitting ch·ªâ trong v√†i c√∫ click. Ti·∫øt ki·ªám 70% th·ªùi gian thao t√°c Revit.
              </h4>
              
              <ul className="space-y-3">
                {[
                  "D·ªÖ d√πng ‚Äì C√†i ƒë·∫∑t trong 2 ph√∫t",
                  "T·ª± ƒë·ªông h√≥a thao t√°c th·ªß c√¥ng",
                  "Gi√∫p ƒë·ªìng b·ªô h·ªá th·ªëng ·ªëng ch√≠nh x√°c tuy·ªát ƒë·ªëi"
                ].map((benefit, i) => (
                  <li key={i} className="flex items-start gap-3">
                    <Check className="w-6 h-6 text-accent flex-shrink-0 mt-0.5" />
                    <span className="text-foreground font-medium">{benefit}</span>
                  </li>
                ))}
              </ul>

              <div className="pt-4">
                <Button variant="cta" size="xl" onClick={scrollToForm} className="w-full md:w-auto">
                  <Download className="w-5 h-5" />
                  NH·∫¨N NGAY PH·∫¶N M·ªÄM MI·ªÑN PH√ç
                  <ChevronDown className="w-5 h-5" />
                </Button>
              </div>
            </div>

            {/* Right - Form */}
            <Card id="hero-form" className="shadow-2xl border-2 animate-scale-in">
              <CardHeader>
                <CardTitle className="text-2xl font-heading flex items-center gap-2">
                  <Download className="w-6 h-6 text-primary" />
                  ƒêƒÉng k√Ω ƒë·ªÉ nh·∫≠n ph·∫ßn m·ªÅm mi·ªÖn ph√≠
                </CardTitle>
                <CardDescription>
                  ƒêi·ªÅn th√¥ng tin ƒë·ªÉ nh·∫≠n link t·∫£i v√† h∆∞·ªõng d·∫´n c√†i ƒë·∫∑t
                </CardDescription>
              </CardHeader>
              <CardContent>
                <form onSubmit={handleSubmit} className="space-y-4">
                  <div className="space-y-2">
                    <Label htmlFor="fullName">H·ªç v√† t√™n *</Label>
                    <Input
                      id="fullName"
                      name="fullName"
                      value={formData.fullName}
                      onChange={handleInputChange}
                      placeholder="Nguy·ªÖn VƒÉn A"
                      required
                    />
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="email">Email *</Label>
                    <Input
                      id="email"
                      name="email"
                      type="email"
                      value={formData.email}
                      onChange={handleInputChange}
                      placeholder="email@example.com"
                      required
                    />
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i *</Label>
                    <Input
                      id="phone"
                      name="phone"
                      type="tel"
                      value={formData.phone}
                      onChange={handleInputChange}
                      placeholder="0936 340 576"
                      required
                    />
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="company">C√¥ng ty / ƒê∆°n v·ªã *</Label>
                    <Input
                      id="company"
                      name="company"
                      value={formData.company}
                      onChange={handleInputChange}
                      placeholder="T√™n c√¥ng ty"
                      required
                    />
                  </div>

                  <Button type="submit" variant="cta" size="xl" className="w-full">
                    NH·∫¨N NGAY PH·∫¶N M·ªÄM MI·ªÑN PH√ç
                  </Button>
                </form>

                {/* Countdown Timer & Special Offer - Compact */}
                <div className="mt-4 space-y-3">
                  {/* Countdown */}
                  <div className="">
                    <div className=" font-bold text-accent mb-2 flex items-center justify-center gap-1">
                      <Clock className="w-4 h-4" />
                      ∆Øu ƒë√£i h·∫øt h·∫°n trong
                    </div>
                    <div className="flex justify-center gap-1 sm:gap-2">
                      {[
                        { label: "h", value: timeLeft.hours },
                        { label: "m", value: timeLeft.minutes },
                        { label: "s", value: timeLeft.seconds }
                      ].map((item, i) => (
                        <div key={i} className="text-center">
                          <div className="bg-accent text-accent-foreground rounded px-1.5 sm:px-2 py-1">
                            <div className=" font-bold font-number">{String(item.value).padStart(2, '0')}</div>
                          </div>
                          <div className="text-[10px] sm:text-xs text-muted-foreground mt-0.5">{item.label}</div>
                        </div>
                      ))}
                    </div>
                  </div>

              
                </div>

                {/* Trust strip */}
                <div className="mt-4 p-3 sm:p-4 bg-secondary rounded-lg border border-border text-xs sm:text-sm">
                  <div className="flex gap-2 items-start">
                    <Shield className="w-4 h-4 sm:w-5 sm:h-5 text-primary flex-shrink-0 mt-0.5" />
                    <div className="space-y-1">
                      <p className="text-foreground font-medium">
                        üî∞ H∆°n 500+ k·ªπ s∆∞ ƒë√£ s·ª≠ d·ª•ng BimSpeed MEP
                      </p>
                      <p className="text-muted-foreground">
                        üëâ C√†i ƒë·∫∑t mi·ªÖn ph√≠ ngay h√¥m nay!
                      </p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

        </div>
      </section>

      {/* Inside Section */}
      <section id="inside" className="py-20 px-4 bg-card">
        <div className="container mx-auto">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold font-heading mb-4">
              B√™n trong BimSpeed MEP b·∫°n nh·∫≠n ƒë∆∞·ª£c g√¨?
            </h2>
          </div>

          <div className="grid md:grid-cols-3 gap-8 mb-16">
            {[
              {
                icon: <Settings className="w-12 h-12 text-primary" />,
                title: "B·ªô c√¥ng c·ª• MEP ho√†n ch·ªânh",
                description: "T·∫°o h·ªá th·ªëng ·ªëng, co, fitting v√† hanger ch·ªâ trong v√†i gi√¢y. H·ªó tr·ª£ t·ª± ƒë·ªông xoay, align, bend, v√† t·∫°o branch th√¥ng minh."
              },
              {
                icon: <Zap className="w-12 h-12 text-accent" />,
                title: "T·ª± ƒë·ªông h√≥a thao t√°c Revit",
                description: "T·ª´ vi·ªác xoay fitting, cƒÉn ·ªëng, n·ªëi branch ƒë·∫øn g√°n hanger ‚Äì t·∫•t c·∫£ ch·ªâ v·ªõi 1 click."
              },
              {
                icon: <Download className="w-12 h-12 text-primary" />,
                title: "C√†i ƒë·∫∑t d·ªÖ d√†ng",
                description: "Ho·∫°t ƒë·ªông m∆∞·ª£t m√† tr√™n Revit 2020‚Äì2025, kh√¥ng xung ƒë·ªôt add-in kh√°c. H∆∞·ªõng d·∫´n chi ti·∫øt + video h∆∞·ªõng d·∫´n k√®m theo."
              }
            ].map((feature, i) => (
              <Card key={i} className="text-center hover:shadow-xl transition-shadow duration-300">
                <CardContent className="pt-8 pb-6">
                  <div className="flex justify-center mb-4">
                    {feature.icon}
                  </div>
                  <h3 className="text-xl font-bold font-heading mb-3">{feature.title}</h3>
                  <p className="text-muted-foreground">{feature.description}</p>
                </CardContent>
              </Card>
            ))}
          </div>

          {/* YouTube Videos */}
          <div className="mt-16">
            <div className="text-center mb-8">
              <h3 className="text-2xl md:text-3xl font-bold font-heading mb-2">
                Xem demo c√¥ng c·ª• ho·∫°t ƒë·ªông
              </h3>
              <p className="text-muted-foreground">
                Video h∆∞·ªõng d·∫´n chi ti·∫øt c√°ch s·ª≠ d·ª•ng BimSpeed MEP Tool
              </p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6">
              {[
                { id: "CN0KX_Or_wQ", title: "Demo BimSpeed MEP Tool #1" },
                { id: "bdH0dB3Wig0", title: "Demo BimSpeed MEP Tool #2" },
                { id: "34Ak9pMa5dY", title: "Demo BimSpeed MEP Tool #3" }
              ].map((video, i) => (
                <div key={i} className="aspect-video rounded-xl overflow-hidden shadow-lg border border-border hover:shadow-2xl transition-shadow duration-300">
                  <iframe
                    width="100%"
                    height="100%"
                    src={`https://www.youtube.com/embed/${video.id}`}
                    title={video.title}
                    frameBorder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                    allowFullScreen
                    className="w-full h-full"
                  />
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Social Proof Section */}
      <section id="proof" className="py-12 sm:py-16 md:py-20 px-3 sm:px-4">
        <div className="container mx-auto">
          <div className="text-center mb-8 sm:mb-12">
            <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold font-heading mb-4">
              K·ªπ s∆∞ n√≥i g√¨ v·ªÅ BimSpeed MEP
            </h2>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6">
            {[
              {
                quote: "Tr∆∞·ªõc ƒë√¢y t√¥i m·∫•t c·∫£ bu·ªïi ch·ªâ ƒë·ªÉ ch·ªânh ·ªëng gi√≥ v√† co. Gi·ªù ch·ªâ c·∫ßn v√†i ph√∫t v·ªõi BimSpeed MEP ‚Äì ƒë√∫ng h∆∞·ªõng, ƒë√∫ng cao ƒë·ªô, kh√¥ng l·ªói!",
                author: "Anh Tu·∫•n",
                role: "K·ªπ s∆∞ MEP, TP.HCM",
              },
              {
                quote: "BimSpeed MEP gi√∫p team t√¥i gi·∫£m 60% th·ªùi gian modeling MEP cho d·ª± √°n kh√°ch s·∫°n. Tool c·ª±c k·ª≥ h·ªØu √≠ch!",
                author: "Ms Hi·ªÅn",
                role: "BIM Coordinator, H√† N·ªôi",
              },
              {
                quote: "T√≠nh nƒÉng t·ª± ƒë·ªông t·∫°o hanger v√† align ·ªëng n∆∞·ªõc r·∫•t tuy·ªát v·ªùi. C√¥ng vi·ªác ho√†n th√†nh nhanh g·∫•p ƒë√¥i so v·ªõi tr∆∞·ªõc kia!",
                author: "Anh Minh",
                role: "MEP Design Engineer, ƒê√† N·∫µng",
              },
              {
                quote: "Ph·∫ßn m·ªÅm d·ªÖ s·ª≠ d·ª•ng, kh√¥ng c·∫ßn h·ªçc l√¢u l√† l√†m ƒë∆∞·ª£c ngay. H·ªó tr·ª£ nhi·ªát t√¨nh, c√†i ƒë·∫∑t ch·ªâ m·∫•t 5 ph√∫t!",
                author: "Ch·ªã Ng·ªçc",
                role: "K·ªπ s∆∞ HVAC, H√† N·ªôi",
              },
              {
                quote: "Tr∆∞·ªõc khi d√πng BimSpeed, t√¥i ph·∫£i xoay t·ª´ng fitting th·ªß c√¥ng. Gi·ªù 1 click l√† xong h·∫øt. Th·∫≠t s·ª± ti·∫øt ki·ªám c√¥ng s·ª©c!",
                author: "Anh Quang",
                role: "MEP Modeler, B√¨nh D∆∞∆°ng",
              },
              {
                quote: "D·ª± √°n cao ·ªëc vƒÉn ph√≤ng c·ªßa ch√∫ng t√¥i c√≥ h·ªá th·ªëng ·ªëng ph·ª©c t·∫°p. BimSpeed MEP gi√∫p ƒë·ªìng b·ªô h√≥a to√†n b·ªô h·ªá th·ªëng ch·ªâ trong v√†i ng√†y thay v√¨ v√†i tu·∫ßn.",
                author: "Mr. ƒê·ª©c",
                role: "BIM Manager, TP.HCM",
              },
              {
                quote: "C√¥ng c·ª• t·∫°o branch v√† n·ªëi ·ªëng th√¥ng minh qu√°! Kh√¥ng c√≤n lo l·ªói k·∫øt n·ªëi hay sai cao ƒë·ªô n·ªØa. Recommend 100%!",
                author: "Anh Long",
                role: "Plumbing Engineer, H·∫£i Ph√≤ng",
              },
              {
                quote: "Team MEP c·ªßa c√¥ng ty t√¥i ƒë√£ th·ª≠ nhi·ªÅu tool kh√°c nh∆∞ng BimSpeed v·∫´n l√† t·ªët nh·∫•t. H·ªó tr·ª£ ƒë·∫ßy ƒë·ªß Revit 2020-2025, kh√¥ng b·ªã conflict.",
                author: "Ms Th·∫£o",
                role: "Lead MEP Engineer, H√† N·ªôi",
              },
              {
                quote: "T√¥i l√†m freelance MEP cho nhi·ªÅu d·ª± √°n. BimSpeed gi√∫p t√¥i giao h√†ng nhanh h∆°n, ch·∫•t l∆∞·ª£ng t·ªët h∆°n. Kh√°ch h√†ng r·∫•t h√†i l√≤ng!",
                author: "Anh Nam",
                role: "Freelance MEP Consultant, TP.HCM",
              },
              {
                quote: "Ban ƒë·∫ßu t√¥i nghƒ© ph·∫£i m·∫•t c√¥ng h·ªçc tool m·ªõi. Nh∆∞ng kh√¥ng, BimSpeed r·∫•t tr·ª±c quan. C√†i xong l√† l√†m ƒë∆∞·ª£c lu√¥n. Video h∆∞·ªõng d·∫´n r·∫•t chi ti·∫øt!",
                author: "Ch·ªã H∆∞∆°ng",
                role: "Junior MEP Engineer, C·∫ßn Th∆°",
              }
            ].map((testimonial, i) => (
              <Card key={i} className="hover:shadow-xl transition-shadow duration-300">
                <CardContent className="pt-6">
                  <div className="flex items-start gap-3 sm:gap-4 mb-4">
                    <Users className="w-10 h-10 sm:w-12 sm:h-12 text-primary flex-shrink-0" />
                    <div>
                      <p className="text-xs sm:text-sm md:text-base text-foreground italic mb-4">"{testimonial.quote}"</p>
                      <div>
                        <p className="font-bold text-sm sm:text-base text-foreground">{testimonial.author}</p>
                        <p className="text-xs sm:text-sm text-muted-foreground">{testimonial.role}</p>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Benefits Section */}
      <section id="benefits" className="py-12 sm:py-16 md:py-20 px-3 sm:px-4 bg-card">
        <div className="container mx-auto">
          <div className="text-center mb-8 sm:mb-12">
            <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold font-heading mb-4">
              C√†i ƒë·∫∑t l√† b·∫°n c√≥ ngay‚Ä¶
            </h2>
          </div>

          <div className="max-w-3xl mx-auto">
            <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6">
              {[
                "T·ª± ƒë·ªông t·∫°o h·ªá th·ªëng MEP trong Revit",
                "Xoay, cƒÉn ch·ªânh, n·ªëi branch c·ª±c nhanh",
                "Gi·∫£m l·ªói k·∫øt n·ªëi ‚Äì ƒë·ªìng b·ªô cao ƒë·ªô ch√≠nh x√°c",
                "H·ªó tr·ª£ Revit 2020‚Äì2025",
                "Mi·ªÖn ph√≠ tr·ªçn ƒë·ªùi cho phi√™n b·∫£n ƒë·∫ßu ti√™n"
              ].map((benefit, i) => (
                <div key={i} className="flex items-start gap-3 p-3 sm:p-4 rounded-lg bg-background border border-border hover:border-primary transition-colors">
                  <Check className="w-5 h-5 sm:w-6 sm:h-6 text-accent flex-shrink-0 mt-0.5" />
                  <span className="text-sm sm:text-base text-foreground font-medium">{benefit}</span>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* About Section */}
      <section id="about" className="py-12 sm:py-16 md:py-20 px-3 sm:px-4">
        <div className="container mx-auto max-w-4xl">
          <div className="text-center mb-8">
            <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold font-heading mb-4 sm:mb-6">
              ƒê·ªôi ng≈© ph√°t tri·ªÉn BimSpeed MEP
            </h2>
            <div className="space-y-4 text-sm sm:text-base md:text-lg text-muted-foreground">
              <p>
                BimSpeed ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi ƒë·ªôi ng≈© k·ªπ s∆∞ Revit & BIM Vi·ªát Nam v·ªõi h∆°n 10 nƒÉm kinh nghi·ªám trong ng√†nh MEP.
              </p>
              <p>
                M·ª•c ti√™u c·ªßa ch√∫ng t√¥i l√† gi√∫p k·ªπ s∆∞ c∆° ƒëi·ªán ti·∫øt ki·ªám th·ªùi gian, lo·∫°i b·ªè thao t√°c th·ªß c√¥ng v√† tƒÉng hi·ªáu su·∫•t d·ª± √°n b·∫±ng c√°c c√¥ng c·ª• t·ª± ƒë·ªông h√≥a trong Revit.
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section id="cta" className="py-12 sm:py-16 md:py-20 px-3 sm:px-4 bg-primary text-primary-foreground">
        <div className="container mx-auto max-w-4xl text-center">
          <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold font-heading mb-4 sm:mb-6">
            Ti·∫øt ki·ªám h√†ng gi·ªù thi·∫øt k·∫ø MEP m·ªói ng√†y ‚Äì ho√†n to√†n mi·ªÖn ph√≠!
          </h2>
          <p className="text-sm sm:text-base md:text-lg mb-6 sm:mb-8 opacity-90">
            Ch·ªâ c·∫ßn 1 ph√∫t ƒëi·ªÅn th√¥ng tin, b·∫°n s·∫Ω nh·∫≠n ngay ph·∫ßn m·ªÅm BimSpeed MEP ‚Äì c√¥ng c·ª• t·ª± ƒë·ªông h√≥a Revit gi√∫p tƒÉng t·ªëc thi·∫øt k·∫ø, gi·∫£m l·ªói v√† n√¢ng cao hi·ªáu qu·∫£.
          </p>
          
          <Button 
            variant="hero" 
            size="xl" 
            onClick={scrollToForm}
            className="mb-6 sm:mb-8 bg-card text-primary hover:bg-card/90"
          >
            <Download className="w-5 h-5" />
            NH·∫¨N NGAY PH·∫¶N M·ªÄM MI·ªÑN PH√ç
          </Button>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-4 sm:gap-6 mt-8 sm:mt-12 text-left">
            {[
              { icon: <Settings className="w-6 h-6 sm:w-8 sm:h-8" />, text: "B·ªô c√¥ng c·ª• MEP Tool" },
              { icon: <Youtube className="w-6 h-6 sm:w-8 sm:h-8" />, text: "Video h∆∞·ªõng d·∫´n c√†i ƒë·∫∑t & s·ª≠ d·ª•ng" },
              { icon: <MessageCircle className="w-6 h-6 sm:w-8 sm:h-8" />, text: "Link nh√≥m Zalo k·ªπ s∆∞ h·ªó tr·ª£ k·ªπ thu·∫≠t" }
            ].map((item, i) => (
              <div key={i} className="flex items-start gap-2 sm:gap-3 p-3 sm:p-4 bg-primary-foreground/10 rounded-lg">
                {item.icon}
                <span className="font-medium text-sm sm:text-base">{item.text}</span>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Bonus Section */}
      <section id="bonus" className="py-12 sm:py-16 md:py-20 px-3 sm:px-4">
        <div className="container mx-auto max-w-4xl">
          <Card className="border-4 border-accent shadow-2xl overflow-hidden">
            <div className="bg-gradient-cta p-1">
              <div className="bg-card p-6 sm:p-8">
                <div className="text-center mb-6">
                  <h2 className="text-2xl sm:text-3xl font-bold font-heading mb-4 flex items-center justify-center gap-2">
                    <span className="text-3xl sm:text-4xl">‚≠ê</span>
                    T·∫°i sao ch·ªçn BimSpeed MEP?
                  </h2>
                  <p className="text-base sm:text-lg text-muted-foreground">
                    H∆°n 500+ k·ªπ s∆∞ v√† c√¥ng ty MEP t·∫°i Vi·ªát Nam ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng BimSpeed
                  </p>
                </div>

                <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6 mb-6">
                  {[
                    { icon: "‚ö°", text: "Ti·∫øt ki·ªám 70% th·ªùi gian thi·∫øt k·∫ø MEP" },
                    { icon: "üéØ", text: "T·ª± ƒë·ªông h√≥a ho√†n to√†n kh√¥ng c·∫ßn code" },
                    { icon: "üîß", text: "H·ªó tr·ª£ Revit 2020-2025" },
                    { icon: "üí¨", text: "H·ªó tr·ª£ k·ªπ thu·∫≠t 24/7 qua nh√≥m Zalo" }
                  ].map((item, i) => (
                    <div key={i} className="flex items-start gap-3 p-4 bg-secondary rounded-lg border border-border hover:border-accent transition-colors">
                      <span className="text-2xl flex-shrink-0">{item.icon}</span>
                      <span className="text-sm sm:text-base font-medium text-foreground">{item.text}</span>
                    </div>
                  ))}
                </div>

                <div className="text-center">
                  <Button variant="cta" size="xl" onClick={scrollToForm}>
                    <Download className="w-5 h-5" />
                    NH·∫¨N NGAY - HO√ÄN TO√ÄN MI·ªÑN PH√ç
                  </Button>
                </div>
              </div>
            </div>
          </Card>
        </div>
      </section>

      {/* Privacy Section */}
      <section id="privacy" className="py-8 sm:py-12 px-3 sm:px-4 bg-secondary">
        <div className="container mx-auto max-w-4xl">
          <div className="flex items-start gap-3 sm:gap-4 p-4 sm:p-6 bg-card rounded-lg border border-border">
            <Lock className="w-6 h-6 sm:w-8 sm:h-8 text-primary flex-shrink-0" />
            <div>
              <h3 className="font-bold text-base sm:text-lg mb-2 flex items-center gap-2">
                üîí Ch√∫ng t√¥i t√¥n tr·ªçng quy·ªÅn ri√™ng t∆∞
              </h3>
              <p className="text-xs sm:text-sm md:text-base text-muted-foreground">
                Email v√† s·ªë ƒëi·ªán tho·∫°i c·ªßa b·∫°n ch·ªâ ƒë∆∞·ª£c d√πng ƒë·ªÉ g·ª≠i link t·∫£i v√† h∆∞·ªõng d·∫´n c√†i ƒë·∫∑t ‚Äì kh√¥ng spam, kh√¥ng chia s·∫ª cho b√™n th·ª© ba.
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-foreground text-background py-8 sm:py-12 px-3 sm:px-4">
        <div className="container mx-auto">
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 sm:gap-8 mb-6 sm:mb-8">
            {/* Logo & Company */}
            <div>
              <BimSpeedLogo size="md" className="mb-4" />
              <p className="text-xs sm:text-sm opacity-80">
                ¬© 2025 BimSpeed Solutions
              </p>
            </div>

            {/* Contact */}
            <div>
              <h4 className="font-bold mb-4 text-sm sm:text-base">Li√™n h·ªá</h4>
              <div className="space-y-2 text-xs sm:text-sm">
                <div className="flex items-center gap-2">
                  <Phone className="w-4 h-4 flex-shrink-0" />
                  <span>Ms Hi√™n ‚Äì 0936 340 576</span>
                </div>
                <div className="flex items-center gap-2">
                  <MessageCircle className="w-4 h-4 flex-shrink-0" />
                  <a href="https://zalo.me/g/gttlef153" target="_blank" rel="noopener noreferrer" className="hover:underline">
                    Nh√≥m Zalo k·ªπ s∆∞
                  </a>
                </div>
                <div className="flex items-center gap-2">
                  <Globe className="w-4 h-4 flex-shrink-0" />
                  <a href="https://www.bimspeed.net/download" target="_blank" rel="noopener noreferrer" className="hover:underline">
                    www.bimspeed.net/download
                  </a>
                </div>
              </div>
            </div>

            {/* Social */}
            <div>
              <h4 className="font-bold mb-4 text-sm sm:text-base">Theo d√µi ch√∫ng t√¥i</h4>
              <div className="flex gap-4">
                <a href="#" className="hover:opacity-80 transition-opacity">
                  <Facebook className="w-6 h-6" />
                </a>
                <a href="#" className="hover:opacity-80 transition-opacity">
                  <Youtube className="w-6 h-6" />
                </a>
                <a href="https://zalo.me/g/gttlef153" target="_blank" rel="noopener noreferrer" className="hover:opacity-80 transition-opacity">
                  <MessageCircle className="w-6 h-6" />
                </a>
              </div>
            </div>
          </div>

          <div className="border-t border-background/20 pt-6 sm:pt-8 text-center text-xs sm:text-sm opacity-80">
            <div className="flex flex-wrap justify-center gap-4 sm:gap-6">
              <a href="#" className="hover:underline">Privacy Policy</a>
              <a href="#" className="hover:underline">Terms of Service</a>
              <a href="#" className="hover:underline">Contact</a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;
